cc.PointObject=cc.Class.extend({_ratio:null,_offset:null,_child:null,ctor:function(a,b){this.initWithCCPoint(a,b)},getRatio:function(){return this._ratio},setRatio:function(a){this._ratio=a},getOffset:function(){return this._offset},setOffset:function(a){this._offset=a},getChild:function(){return this._child},setChild:function(a){this._child=a},initWithCCPoint:function(a,b){return this._ratio=a,this._offset=b,this._child=null,!0}}),cc.PointObject.create=function(a,b){return new cc.PointObject(a,b)},cc.ParallaxNode=cc.Node.extend({parallaxArray:null,_lastPosition:null,_className:"ParallaxNode",getParallaxArray:function(){return this.parallaxArray},setParallaxArray:function(a){this.parallaxArray=a},ctor:function(){cc.Node.prototype.ctor.call(this),this.parallaxArray=[],this._lastPosition=cc.p(-100,-100)},addChild:function(a,b,c,d){if(3===arguments.length)return void cc.log("ParallaxNode: use addChild(child, z, ratio, offset) instead");if(!a)throw new Error("cc.ParallaxNode.addChild(): child should be non-null");var e=new cc.PointObject(c,d);e.setChild(a),this.parallaxArray.push(e),a.setPosition(this._position.x*c.x+d.x,this._position.y*c.y+d.y),cc.Node.prototype.addChild.call(this,a,b,a.tag)},removeChild:function(a,b){for(var c=this.parallaxArray,d=0;d<c.length;d++){var e=c[d];if(e.getChild()===a){c.splice(d,1);break}}cc.Node.prototype.removeChild.call(this,a,b)},removeAllChildren:function(a){this.parallaxArray.length=0,cc.Node.prototype.removeAllChildren.call(this,a)},_updateParallaxPosition:function(){var a=this._absolutePosition();if(!cc.pointEqualToPoint(a,this._lastPosition)){for(var b=this.parallaxArray,c=0,d=b.length;d>c;c++){var e=b[c],f=e.getChild();f.setPosition(-a.x+a.x*e.getRatio().x+e.getOffset().x,-a.y+a.y*e.getRatio().y+e.getOffset().y)}this._lastPosition=a}},_absolutePosition:function(){for(var a=this._position,b=this;null!==b.parent;)b=b.parent,a=cc.pAdd(a,b.getPosition());return a},_createRenderCmd:function(){return cc._renderType===cc.game.RENDER_TYPE_CANVAS?new cc.ParallaxNode.CanvasRenderCmd(this):new cc.ParallaxNode.WebGLRenderCmd(this)}}),cc.ParallaxNode.create=function(){return new cc.ParallaxNode},function(){cc.ParallaxNode.CanvasRenderCmd=function(a){cc.Node.CanvasRenderCmd.call(this,a),this._needDraw=!1};var a=cc.ParallaxNode.CanvasRenderCmd.prototype=Object.create(cc.Node.CanvasRenderCmd.prototype);a.constructor=cc.ParallaxNode.CanvasRenderCmd,a.updateStatus=function(){this._node._updateParallaxPosition(),cc.Node.CanvasRenderCmd.prototype.updateStatus.call(this)},a._syncStatus=function(a){this._node._updateParallaxPosition(),cc.Node.CanvasRenderCmd.prototype._syncStatus.call(this,a)}}(),cc.game.addEventListener(cc.game.EVENT_RENDERER_INITED,function(){if(cc._renderType===cc.game.RENDER_TYPE_WEBGL){cc.ParallaxNode.WebGLRenderCmd=function(a){cc.Node.WebGLRenderCmd.call(this,a),this._needDraw=!1};var a=cc.ParallaxNode.WebGLRenderCmd.prototype=Object.create(cc.Node.WebGLRenderCmd.prototype);a.constructor=cc.ParallaxNode.WebGLRenderCmd,a.updateStatus=function(){this._node._updateParallaxPosition(),cc.Node.WebGLRenderCmd.prototype.updateStatus.call(this)},a._syncStatus=function(a){this._node._updateParallaxPosition(),cc.Node.WebGLRenderCmd.prototype._syncStatus.call(this,a)}}});