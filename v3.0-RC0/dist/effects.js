cc.GridBase=cc.Class.extend({_active:!1,_reuseGrid:0,_gridSize:null,_texture:null,_step:null,_grabber:null,_isTextureFlipped:!1,_shaderProgram:null,_directorProjection:0,_dirty:!1,ctor:function(a,b,c){cc._checkWebGLRenderMode();this._active=!1;this._reuseGrid=0;this._texture=this._gridSize=null;this._step=cc.p(0,0);this._grabber=null;this._isTextureFlipped=!1;this._shaderProgram=null;this._directorProjection=0;this._dirty=!1;void 0!==a&&this.initWithSize(a,b,c)},isActive:function(){return this._active},
setActive:function(a){this._active=a;if(!a){a=cc.director;var b=a.getProjection();a.setProjection(b)}},getReuseGrid:function(){return this._reuseGrid},setReuseGrid:function(a){this._reuseGrid=a},getGridSize:function(){return cc.size(this._gridSize.width,this._gridSize.height)},setGridSize:function(a){this._gridSize.width=parseInt(a.width);this._gridSize.height=parseInt(a.height)},getStep:function(){return cc.p(this._step.x,this._step.y)},setStep:function(a){this._step.x=a.x;this._step.y=a.y},isTextureFlipped:function(){return this._isTextureFlipped},
setTextureFlipped:function(a){this._isTextureFlipped!=a&&(this._isTextureFlipped=a,this.calculateVertexPoints())},initWithSize:function(a,b,c){if(!b){var f=cc.director.getWinSizeInPixels(),k=cc.NextPOT(f.width),d=cc.NextPOT(f.height),e=new Uint8Array(4*k*d);if(!e)return cc.log("cocos2d: CCGrid: not enough memory."),!1;b=new cc.Texture2D;b.initWithData(e,cc.Texture2D.PIXEL_FORMAT_RGBA8888,k,d,f);if(!b)return cc.log("cocos2d: CCGrid: error creating texture"),!1}this._active=!1;this._reuseGrid=0;this._gridSize=
a;this._texture=b;this._isTextureFlipped=c||!1;this._step.x=this._texture.width/a.width;this._step.y=this._texture.height/a.height;this._grabber=new cc.Grabber;if(!this._grabber)return!1;this._grabber.grab(this._texture);this._shaderProgram=cc.shaderCache.programForKey(cc.SHADER_POSITION_TEXTURE);this.calculateVertexPoints();return!0},beforeDraw:function(){this._directorProjection=cc.director.getProjection();this.set2DProjection();this._grabber.beforeRender(this._texture)},afterDraw:function(a){this._grabber.afterRender(this._texture);
cc.director.setProjection(this._directorProjection);if(a.getCamera().isDirty()){var b=a.getAnchorPointInPoints();cc.kmGLTranslatef(b.x,b.y,0);a.getCamera().locate();cc.kmGLTranslatef(-b.x,-b.y,0)}cc.glBindTexture2D(this._texture);this.blit()},blit:function(){cc.log("cc.GridBase.blit(): Shall be overridden in subclass.")},reuse:function(){cc.log("cc.GridBase.reuse(): Shall be overridden in subclass.")},calculateVertexPoints:function(){cc.log("cc.GridBase.calculateVertexPoints(): Shall be overridden in subclass.")},
set2DProjection:function(){var a=cc.director.getWinSizeInPixels();cc._renderContext.viewport(0,0,a.width,a.height);cc.kmGLMatrixMode(cc.KM_GL_PROJECTION);cc.kmGLLoadIdentity();var b=new cc.kmMat4;cc.kmMat4OrthographicProjection(b,0,a.width,0,a.height,-1,1);cc.kmGLMultMatrix(b);cc.kmGLMatrixMode(cc.KM_GL_MODELVIEW);cc.kmGLLoadIdentity();cc.setProjectionMatrixDirty()}});cc.GridBase.create=function(a,b,c){return new cc.GridBase(a,b,c)};
cc.Grid3D=cc.GridBase.extend({_texCoordinates:null,_vertices:null,_originalVertices:null,_indices:null,_texCoordinateBuffer:null,_verticesBuffer:null,_indicesBuffer:null,ctor:function(a,b,c){cc.GridBase.prototype.ctor.call(this);this._indicesBuffer=this._verticesBuffer=this._texCoordinateBuffer=this._indices=this._originalVertices=this._vertices=this._texCoordinates=null;void 0!==a&&this.initWithSize(a,b,c)},vertex:function(a){(a.x!==(0|a.x)||a.y!==(0|a.y))&&cc.log("cc.Grid3D.vertex() : Numbers must be integers");
a=0|3*(a.x*(this._gridSize.height+1)+a.y);var b=this._vertices;return new cc.Vertex3F(b[a],b[a+1],b[a+2])},originalVertex:function(a){(a.x!==(0|a.x)||a.y!==(0|a.y))&&cc.log("cc.Grid3D.originalVertex() : Numbers must be integers");a=0|3*(a.x*(this._gridSize.height+1)+a.y);var b=this._originalVertices;return new cc.Vertex3F(b[a],b[a+1],b[a+2])},setVertex:function(a,b){(a.x!==(0|a.x)||a.y!==(0|a.y))&&cc.log("cc.Grid3D.setVertex() : Numbers must be integers");var c=0|3*(a.x*(this._gridSize.height+1)+
a.y),f=this._vertices;f[c]=b.x;f[c+1]=b.y;f[c+2]=b.z;this._dirty=!0},blit:function(){var a=this._gridSize.width*this._gridSize.height;cc.glEnableVertexAttribs(cc.VERTEX_ATTRIB_FLAG_POSITION|cc.VERTEX_ATTRIB_FLAG_TEX_COORDS);this._shaderProgram.use();this._shaderProgram.setUniformsForBuiltins();var b=cc._renderContext,c=this._dirty;b.bindBuffer(b.ARRAY_BUFFER,this._verticesBuffer);c&&b.bufferData(b.ARRAY_BUFFER,this._vertices,b.DYNAMIC_DRAW);b.vertexAttribPointer(cc.VERTEX_ATTRIB_POSITION,3,b.FLOAT,
!1,0,0);b.bindBuffer(b.ARRAY_BUFFER,this._texCoordinateBuffer);c&&b.bufferData(b.ARRAY_BUFFER,this._texCoordinates,b.DYNAMIC_DRAW);b.vertexAttribPointer(cc.VERTEX_ATTRIB_TEX_COORDS,2,b.FLOAT,!1,0,0);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,this._indicesBuffer);c&&b.bufferData(b.ELEMENT_ARRAY_BUFFER,this._indices,b.STATIC_DRAW);b.drawElements(b.TRIANGLES,6*a,b.UNSIGNED_SHORT,0);c&&(this._dirty=!1);cc.incrementGLDraws(1)},reuse:function(){if(0<this._reuseGrid){for(var a=this._originalVertices,b=this._vertices,
c=0,f=this._vertices.length;c<f;c++)a[c]=b[c];--this._reuseGrid}},calculateVertexPoints:function(){var a=cc._renderContext,b=this._texture.pixelsWidth,c=this._texture.pixelsHeight,f=this._texture.getContentSizeInPixels().height,k=this._gridSize,d=(k.width+1)*(k.height+1);this._vertices=new Float32Array(3*d);this._texCoordinates=new Float32Array(2*d);this._indices=new Uint16Array(6*k.width*k.height);this._verticesBuffer&&a.deleteBuffer(this._verticesBuffer);this._verticesBuffer=a.createBuffer();this._texCoordinateBuffer&&
a.deleteBuffer(this._texCoordinateBuffer);this._texCoordinateBuffer=a.createBuffer();this._indicesBuffer&&a.deleteBuffer(this._indicesBuffer);this._indicesBuffer=a.createBuffer();for(var e,h,g=this._indices,u=this._texCoordinates,l=this._isTextureFlipped,n=this._vertices,d=0;d<k.width;++d)for(e=0;e<k.height;++e){var p=e*k.width+d;h=d*this._step.x;var m=h+this._step.x,r=e*this._step.y,s=r+this._step.y,q=d*(k.height+1)+e,t=(d+1)*(k.height+1)+e,v=(d+1)*(k.height+1)+(e+1),w=d*(k.height+1)+(e+1);g[6*p]=
q;g[6*p+1]=t;g[6*p+2]=w;g[6*p+3]=t;g[6*p+4]=v;g[6*p+5]=w;var p=[3*q,3*t,3*v,3*w],x=[{x:h,y:r,z:0},{x:m,y:r,z:0},{x:m,y:s,z:0},{x:h,y:s,z:0}],q=[2*q,2*t,2*v,2*w],m=[cc.p(h,r),cc.p(m,r),cc.p(m,s),cc.p(h,s)];for(h=0;4>h;++h)n[p[h]]=x[h].x,n[p[h]+1]=x[h].y,n[p[h]+2]=x[h].z,u[q[h]]=m[h].x/b,u[q[h]+1]=l?(f-m[h].y)/c:m[h].y/c}this._originalVertices=new Float32Array(this._vertices);a.bindBuffer(a.ARRAY_BUFFER,this._verticesBuffer);a.bufferData(a.ARRAY_BUFFER,this._vertices,a.DYNAMIC_DRAW);a.bindBuffer(a.ARRAY_BUFFER,
this._texCoordinateBuffer);a.bufferData(a.ARRAY_BUFFER,this._texCoordinates,a.DYNAMIC_DRAW);a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this._indicesBuffer);a.bufferData(a.ELEMENT_ARRAY_BUFFER,this._indices,a.STATIC_DRAW);this._dirty=!0}});cc.Grid3D.create=function(a,b,c){return new cc.Grid3D(a,b,c)};
cc.TiledGrid3D=cc.GridBase.extend({_texCoordinates:null,_vertices:null,_originalVertices:null,_indices:null,_texCoordinateBuffer:null,_verticesBuffer:null,_indicesBuffer:null,ctor:function(a,b,c){cc.GridBase.prototype.ctor.call(this);this._indicesBuffer=this._verticesBuffer=this._texCoordinateBuffer=this._indices=this._originalVertices=this._vertices=this._texCoordinates=null;void 0!==a&&this.initWithSize(a,b,c)},tile:function(a){(a.x!==(0|a.x)||a.y!==(0|a.y))&&cc.log("cc.TiledGrid3D.tile() : Numbers must be integers");
a=12*(this._gridSize.height*a.x+a.y);var b=this._vertices;return new cc.Quad3(new cc.Vertex3F(b[a],b[a+1],b[a+2]),new cc.Vertex3F(b[a+3],b[a+4],b[a+5]),new cc.Vertex3F(b[a+6],b[a+7],b[a+8]),new cc.Vertex3F(b[a+9],b[a+10],b[a+11]))},originalTile:function(a){(a.x!==(0|a.x)||a.y!==(0|a.y))&&cc.log("cc.TiledGrid3D.originalTile() : Numbers must be integers");a=12*(this._gridSize.height*a.x+a.y);var b=this._originalVertices;return new cc.Quad3(new cc.Vertex3F(b[a],b[a+1],b[a+2]),new cc.Vertex3F(b[a+3],
b[a+4],b[a+5]),new cc.Vertex3F(b[a+6],b[a+7],b[a+8]),new cc.Vertex3F(b[a+9],b[a+10],b[a+11]))},setTile:function(a,b){(a.x!==(0|a.x)||a.y!==(0|a.y))&&cc.log("cc.TiledGrid3D.setTile() : Numbers must be integers");var c=12*(this._gridSize.height*a.x+a.y),f=this._vertices;f[c]=b.bl.x;f[c+1]=b.bl.y;f[c+2]=b.bl.z;f[c+3]=b.br.x;f[c+4]=b.br.y;f[c+5]=b.br.z;f[c+6]=b.tl.x;f[c+7]=b.tl.y;f[c+8]=b.tl.z;f[c+9]=b.tr.x;f[c+10]=b.tr.y;f[c+11]=b.tr.z;this._dirty=!0},blit:function(){var a=this._gridSize.width*this._gridSize.height;
this._shaderProgram.use();this._shaderProgram.setUniformsForBuiltins();var b=cc._renderContext,c=this._dirty;cc.glEnableVertexAttribs(cc.VERTEX_ATTRIB_FLAG_POSITION|cc.VERTEX_ATTRIB_FLAG_TEX_COORDS);b.bindBuffer(b.ARRAY_BUFFER,this._verticesBuffer);c&&b.bufferData(b.ARRAY_BUFFER,this._vertices,b.DYNAMIC_DRAW);b.vertexAttribPointer(cc.VERTEX_ATTRIB_POSITION,3,b.FLOAT,!1,0,this._vertices);b.bindBuffer(b.ARRAY_BUFFER,this._texCoordinateBuffer);c&&b.bufferData(b.ARRAY_BUFFER,this._texCoordinates,b.DYNAMIC_DRAW);
b.vertexAttribPointer(cc.VERTEX_ATTRIB_TEX_COORDS,2,b.FLOAT,!1,0,this._texCoordinates);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,this._indicesBuffer);c&&b.bufferData(b.ELEMENT_ARRAY_BUFFER,this._indices,b.STATIC_DRAW);b.drawElements(b.TRIANGLES,6*a,b.UNSIGNED_SHORT,0);c&&(this._dirty=!1);cc.incrementGLDraws(1)},reuse:function(){if(0<this._reuseGrid){for(var a=this._vertices,b=this._originalVertices,c=0;c<a.length;c++)b[c]=a[c];--this._reuseGrid}},calculateVertexPoints:function(){var a=this._texture.pixelsWidth,
b=this._texture.pixelsHeight,c=this._texture.getContentSizeInPixels().height,f=this._gridSize,k=f.width*f.height;this._vertices=new Float32Array(12*k);this._texCoordinates=new Float32Array(8*k);this._indices=new Uint16Array(6*k);var d=cc._renderContext;this._verticesBuffer&&d.deleteBuffer(this._verticesBuffer);this._verticesBuffer=d.createBuffer();this._texCoordinateBuffer&&d.deleteBuffer(this._texCoordinateBuffer);this._texCoordinateBuffer=d.createBuffer();this._indicesBuffer&&d.deleteBuffer(this._indicesBuffer);
this._indicesBuffer=d.createBuffer();var e,h,g=0,u=this._step,l=this._vertices,n=this._texCoordinates,p=this._isTextureFlipped;for(e=0;e<f.width;e++)for(h=0;h<f.height;h++){var m=e*u.x,r=m+u.x,s=h*u.y,q=s+u.y;l[12*g]=m;l[12*g+1]=s;l[12*g+2]=0;l[12*g+3]=r;l[12*g+4]=s;l[12*g+5]=0;l[12*g+6]=m;l[12*g+7]=q;l[12*g+8]=0;l[12*g+9]=r;l[12*g+10]=q;l[12*g+11]=0;var t=s,v=q;p&&(t=c-s,v=c-q);n[8*g]=m/a;n[8*g+1]=t/b;n[8*g+2]=r/a;n[8*g+3]=t/b;n[8*g+4]=m/a;n[8*g+5]=v/b;n[8*g+6]=r/a;n[8*g+7]=v/b;g++}a=this._indices;
for(e=0;e<k;e++)a[6*e+0]=4*e+0,a[6*e+1]=4*e+1,a[6*e+2]=4*e+2,a[6*e+3]=4*e+1,a[6*e+4]=4*e+2,a[6*e+5]=4*e+3;this._originalVertices=new Float32Array(this._vertices);d.bindBuffer(d.ARRAY_BUFFER,this._verticesBuffer);d.bufferData(d.ARRAY_BUFFER,this._vertices,d.DYNAMIC_DRAW);d.bindBuffer(d.ARRAY_BUFFER,this._texCoordinateBuffer);d.bufferData(d.ARRAY_BUFFER,this._texCoordinates,d.DYNAMIC_DRAW);d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,this._indicesBuffer);d.bufferData(d.ELEMENT_ARRAY_BUFFER,this._indices,d.DYNAMIC_DRAW);
this._dirty=!0}});cc.TiledGrid3D.create=function(a,b,c){return new cc.TiledGrid3D(a,b,c)};cc.Grabber=cc.Class.extend({_FBO:null,_oldFBO:null,_oldClearColor:null,_gl:null,ctor:function(){cc._checkWebGLRenderMode();this._gl=cc._renderContext;this._oldClearColor=[0,0,0,0];this._oldFBO=null;this._FBO=this._gl.createFramebuffer()},grab:function(a){var b=this._gl;this._oldFBO=b.getParameter(b.FRAMEBUFFER_BINDING);b.bindFramebuffer(b.FRAMEBUFFER,this._FBO);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,a._webTextureObj,0);b.checkFramebufferStatus(b.FRAMEBUFFER)!=b.FRAMEBUFFER_COMPLETE&&
cc.log("Frame Grabber: could not attach texture to frmaebuffer");b.bindFramebuffer(b.FRAMEBUFFER,this._oldFBO)},beforeRender:function(a){a=this._gl;this._oldFBO=a.getParameter(a.FRAMEBUFFER_BINDING);a.bindFramebuffer(a.FRAMEBUFFER,this._FBO);this._oldClearColor=a.getParameter(a.COLOR_CLEAR_VALUE);a.clearColor(0,0,0,0);a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT)},afterRender:function(a){a=this._gl;a.bindFramebuffer(a.FRAMEBUFFER,this._oldFBO);a.colorMask(!0,!0,!0,!0)},destroy:function(){this._gl.deleteFramebuffer(this._FBO)}});